/// display: flex
/// @group @flex
@mixin flexBox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

%flexbox {
  @include flexBox;
}

/// display: inline-flex
/// @group @flex
@mixin flex-inline {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

%inline-flex {
  @include flex-inline;
}


/// (容器属性) 方向
/// @group @flex
/// @param {string} $value [row] - 方向
@mixin flex-direction($value: row) {
  @if $value==row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $value==column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $value==column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }

  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

// Shorter version:
/// alias of flex-direction
/// @alias flex-direction
@mixin flex-dir($args...) {
  @include flex-direction($args...);
}


/// (容器属性) 是否换行
/// @group @flex
/// @param {string} $value [nowrap] - 换行
@mixin flex-wrap($value: nowrap) {
  // No Webkit Box fallback.
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;

  @if $value==nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }

  flex-wrap: $value;
}


/// (容器属性) flex-dir 和 flex-wrap 的简写
/// @group @flex
/// @param {string} $values [row nowrap] - 简写
@mixin flex-flow($values: (row nowrap)) {
  // No Webkit Box fallback.
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}


/// (容器属性) 主轴上的对齐方式
/// @group @flex
/// @param {string} $value [flex-start] - 对齐方式
@mixin flex-justify-content($value: flex-start) {
  @if $value==flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value==flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value==space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value==space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }

  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}

/// alias of justify-content
/// @alias justify-content
@mixin flex-just($args...) {
  @include flex-justify-content($args...);
}


/// (容器属性) 交叉轴上的对齐方式
/// @group @flex
/// @param {string} $value [stretch] - 对齐方式
@mixin flex-align-items($value: stretch) {
  @if $value==flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $value==flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }

  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}


/// (容器属性) 多根轴线对齐方式
/// @group @flex
/// @param {string} $value [stretch] - 对齐方式
@mixin flex-align-content($value: stretch) {
  // No Webkit Box Fallback.
  -webkit-align-content: $value;
  -moz-align-content: $value;

  @if $value==flex-start {
    -ms-flex-line-pack: start;
  } @else if $value==flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }

  align-content: $value;
}


/// (项目属性) 排列顺序
/// @group @flex
/// @param {integer} $int [0] - 顺序，越小越靠前
@mixin flex-order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
  -webkit-order: $int;
  -moz-order: $int;
  -ms-flex-order: $int;
  order: $int;
}


/// (项目属性) 放大比例
/// @group @flex
/// @param {integer} $int [0] - 所占比例
@mixin flex-grow($int: 0) {
  -webkit-box-flex: $int;
  -webkit-flex-grow: $int;
  -moz-flex-grow: $int;
  -ms-flex-positive: $int;
  flex-grow: $int;
}


/// (项目属性) 缩小比例
/// @group @flex
/// @param {integer} $int [0] - 所占比例
@mixin flex-shrink($int: 1) {
  -webkit-flex-shrink: $int;
  -moz-flex-shrink: $int;
  -ms-flex-negative: $int;
  flex-shrink: $int;
}


/// (项目属性) 项目占的主轴空间
/// @group @flex
/// @param {length|auto} $value [auto] - 项目所占空间
@mixin flex-basis($value: auto) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}


/// (项目属性) flex-grow, flex-shrink, flex-basis 的缩写
/// @group @flex
/// @param {integer|null} $fg [1] - flex-grow
/// @param {integer|null} $fs [null] - flex-shrink
/// @param {length|auto} $fb [null] - flex-basis
@mixin flex($fg: 1, $fs: null, $fb: null) {

  $fg-boxflex: $fg;

  @if type-of($fg)=='list' {
    $fg-boxflex: nth($fg, 1);
  }

  -webkit-box-flex: $fg-boxflex;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg-boxflex;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}


/// (项目属性) 交叉轴上的对齐方式(可以覆盖 align-items)
/// @group @flex
/// @param {string} $value [stretch] - 对齐方式
@mixin flex-align-self($value: auto) {
  // No Webkit Box Fallback.
  -webkit-align-self: $value;
  -moz-align-self: $value;

  @if $value==flex-start {
    -ms-flex-item-align: start;
  } @else if $value==flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }

  align-self: $value;
}


/// (项目属性) 占固定空间的项目
/// @group @flex
/// @param {length|auto} $size [auto] - 所占空间
@mixin flex-fixed($size: auto) {
  @include flex(0, 0, $size)
}